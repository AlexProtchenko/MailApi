Index: MailApi/dbsetting.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=Shop;User Id=postgres;Password=1111\"\n}\n}
===================================================================
diff --git a/MailApi/dbsetting.json b/MailApi/dbsetting.json
--- a/MailApi/dbsetting.json	
+++ b/MailApi/dbsetting.json	
@@ -1,5 +1,5 @@
 {
   "ConnectionStrings": {
-    "DefaultConnection": "Server=localhost;Database=Shop;User Id=postgres;Password=1111"
+    "DefaultConnection": "Server=localhost;Database=Mail;User Id=postgres;Password=1111"
 }
 }
\ No newline at end of file
Index: MailApi/Data/Models/Department.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace MailApi.Data.Models;\n\npublic class Department\n{\n    \n}
===================================================================
diff --git a/MailApi/Data/Models/Department.cs b/MailApi/Data/Models/Department.cs
--- a/MailApi/Data/Models/Department.cs	
+++ b/MailApi/Data/Models/Department.cs	
@@ -2,5 +2,9 @@
 
 public class Department
 {
+    public int DepartmentId { get; set; }
     
+    public string DepartmentName { get; set; }
+
+    public List<User> Users { get; set; } = new List<User>();
 }
\ No newline at end of file
Index: MailApi/Data/Models/User.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace MailApi.Data.Models;\n\npublic class User\n{\n    \n}
===================================================================
diff --git a/MailApi/Data/Models/User.cs b/MailApi/Data/Models/User.cs
--- a/MailApi/Data/Models/User.cs	
+++ b/MailApi/Data/Models/User.cs	
@@ -2,5 +2,11 @@
 
 public class User
 {
+    public int UserId { get; set; }
+    
+    public string Name { get; set; }
     
+    public string Desc { get; set; }
+
+    public List<Department> Departments { get; set; } = new List<Department>();
 }
\ No newline at end of file
Index: MailApi/Data/Interfaces/IMail.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace Shop.Data.Interfaces;\n\npublic interface Imail\n{\n    \n}
===================================================================
diff --git a/MailApi/Data/Interfaces/IMail.cs b/MailApi/Data/Interfaces/IMail.cs
--- a/MailApi/Data/Interfaces/IMail.cs	
+++ b/MailApi/Data/Interfaces/IMail.cs	
@@ -1,6 +1,18 @@
-namespace Shop.Data.Interfaces;
+using MailApi.Data.Models;
+
+namespace MailApi.Data.Interfaces;
 
-public interface Imail
+public interface IMail
 {
+    IEnumerable<User> GetAllUsers { get;}
+    
+    IEnumerable<Department> GetAllDepartments();
+    
+    void Delete(User selectedItem);
+    bool Delete(Department selectedItem);
+    
+    void Add(User contact);
+    void Add(Department department);
+    
     
 }
\ No newline at end of file
Index: MailApi/Startup.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace MailApi;\n\npublic class Startup\n{\n    \n}
===================================================================
diff --git a/MailApi/Startup.cs b/MailApi/Startup.cs
--- a/MailApi/Startup.cs	
+++ b/MailApi/Startup.cs	
@@ -1,6 +1,32 @@
+using MailApi.Data.Interfaces;
+using Microsoft.EntityFrameworkCore;
+using Shop.Data;
+
 namespace MailApi;
 
 public class Startup
 {
+    private IConfigurationRoot _confstring;
+
+    public Startup(IHostEnvironment hostEnv)
+    {
+        _confstring = new ConfigurationBuilder().SetBasePath(hostEnv.ContentRootPath).AddJsonFile("dbsetting.json")
+            .Build();
+    }
+    
+    public void ConfigureServices(IServiceCollection services) {
+        services.AddDbContext<AppDBContent>(options => options.UseNpgsql(_confstring.GetConnectionString("DefaultConnection")));
+        services.AddMvc();
+        services.AddMvc(options => options.EnableEndpointRouting = false);
+        // services.AddTransient<IMail, CarRepository>();
+
+    }
     
+    public void Configure(IApplicationBuilder app, IHostEnvironment env) 
+    {
+        app.UseDeveloperExceptionPage();
+        app.UseStatusCodePages();
+        app.UseMvcWithDefaultRoute();
+        
+    }
 }
\ No newline at end of file
Index: MailApi/Controllers/UserController.cs
===================================================================
diff --git a/MailApi/Controllers/UserController.cs b/MailApi/Controllers/UserController.cs
--- a/MailApi/Controllers/UserController.cs	
+++ b/MailApi/Controllers/UserController.cs	
@@ -1,0 +1,26 @@
+using MailApi.Data.Interfaces;
+using MailApi.Data.Models;
+using Microsoft.AspNetCore.Mvc;
+using Newtonsoft.Json;
+
+namespace MailApi.Controllers;
+
+[Route("api/[controller]")]
+public class UserController : Controller
+{
+    /*
+    private readonly IMail _mail;
+    
+    public UserController(IMail iMail)
+    {
+        _mail = iMail;
+    }
+    */
+    
+    [HttpPost ("add")]
+    public void Post([FromBody]User value) {
+        
+
+    }
+    
+}
\ No newline at end of file
Index: MailApi/Data/AppDBContent.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.EntityFrameworkCore;\nusing Shop.Data.Models;\n\nnamespace Shop.Data;\n\n\npublic class AppDBContent : DbContext\n{\n    public AppDBContent(DbContextOptions<AppDBContent> options) : base(options)\n    {\n        \n    }\n    public DbSet<Car> Car { get; set; }\n    public DbSet<Category> Categoty { get; set; }\n}
===================================================================
diff --git a/MailApi/Data/AppDBContent.cs b/MailApi/Data/AppDBContent.cs
--- a/MailApi/Data/AppDBContent.cs	
+++ b/MailApi/Data/AppDBContent.cs	
@@ -1,5 +1,5 @@
+using MailApi.Data.Models;
 using Microsoft.EntityFrameworkCore;
-using Shop.Data.Models;
 
 namespace Shop.Data;
 
@@ -10,6 +10,6 @@
     {
         
     }
-    public DbSet<Car> Car { get; set; }
-    public DbSet<Category> Categoty { get; set; }
+    public DbSet<User> Users { get; set; }
+    public DbSet<Department> Departments { get; set; }
 }
\ No newline at end of file
